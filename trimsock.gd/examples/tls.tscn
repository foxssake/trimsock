[gd_scene load_steps=2 format=3 uid="uid://bmwvkiatkkdpm"]

[sub_resource type="GDScript" id="GDScript_qgsey"]
script/source = "extends Control

@onready var logs_label := %Logs as Label

var reactor: TrimsockTLSClientReactor

func _ready():
	var host := \"localhost\"
	var port := 8893

	_log(\"Connecting to %s:%d\" % [host, port])
	var stream := StreamPeerTCP.new()
	stream.connect_to_host(host, port)
	while true:
		stream.poll()
		if stream.get_status() != StreamPeerTCP.STATUS_CONNECTING:
			break
		await get_tree().process_frame
	
	if stream.get_status() != StreamPeerTCP.STATUS_CONNECTED:
		_log(\"Connection failed!\")
		return
	else:
		_log(\"Success!\")
	stream.set_no_delay(true)
	
	_log(\"Attaching TLS stream\")
	var peer := StreamPeerTLS.new()
	# Note: NEVER use `TLSOptions.client_unsafe()` in production, this is for 
	# TESTING ONLY
	var err := peer.connect_to_stream(stream, \"foxssake.studio\", TLSOptions.client_unsafe())
	if err != OK:
		_log(\"TLS failed: %s\" % error_string(err))
	else:
		_log(\"Success!\")
		
	_log(\"Awaiting handshake\")
	while peer.get_status() == StreamPeerTLS.STATUS_HANDSHAKING:
		peer.poll()
		await get_tree().process_frame

	if peer.get_status() != StreamPeerTLS.STATUS_CONNECTED:
		_log(\"Fail! %d\" % [peer.get_status()])
		return

	reactor = TrimsockTLSClientReactor.new(peer)
	var number := randi_range(1000, 9999)
	var xchg := reactor.submit_request(TrimsockCommand.request(\"echo\").with_params([str(number)]))
	_log(\"Sent number %d\" % [number])
	
	_log(\"Waiting for response...\")
	var response := await xchg.read()

	_log(\"Response: %s\" % [response.text])

func _physics_process(_dt):
	if reactor:
		reactor.poll()

func _log(text: String):
	logs_label.text += text + \"\\n\"
"

[node name="tls" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_qgsey")

[node name="Panel" type="Panel" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="ScrollContainer" type="ScrollContainer" parent="Panel"]
custom_minimum_size = Vector2(640, 0)
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Logs" type="Label" parent="Panel/ScrollContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
